/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.nuevoCandidato;

import com.github.lgooddatepicker.zinternaltools.Convert;
import com.mysql.cj.protocol.Message;
import common.DateLabelFormatter;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import model.ExperienciaLaboral;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author Joel Grullon
 */
public class AgregarExperienciaForm extends javax.swing.JInternalFrame {

    private NuevoCandidatoForm nuevoCandidatoForm;
    private JDatePickerImpl datePickerDesde;
    private JDatePickerImpl datePickerHasta;

    private ExperienciaLaboral editingExp;

    /**
     * Creates new form AgregarExperienciaForm
     */
    public AgregarExperienciaForm(NuevoCandidatoForm baseForm) {
        nuevoCandidatoForm = baseForm;
        initComponents();

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(this::btnAgregarActionPerformed);
    }

    public AgregarExperienciaForm(NuevoCandidatoForm baseForm, ExperienciaLaboral exp) {
        nuevoCandidatoForm = baseForm;
        initComponents();

        setTitle("Editar Experiencia");

        editingExp = exp;

        txtEmpresa.setText(exp.getEmpresa());
        txtPuesto.setText(exp.getPuesto());
        txtSalario.setValue(exp.getSalario());

        UtilDateModel modelFechaDesde = (UtilDateModel) datePickerDesde.getModel();
        LocalDate desde = exp.getFechaDesde();
        modelFechaDesde.setDate(desde.getYear(), desde.getMonthValue() - 1, desde.getDayOfMonth());

        UtilDateModel modelFechaHasta = (UtilDateModel) datePickerHasta.getModel();
        LocalDate hasta = exp.getFechaHasta();
        modelFechaHasta.setDate(hasta.getYear(), hasta.getMonthValue() - 1, hasta.getDayOfMonth());

        txtDesc.setText(exp.getDescripcion());

        btnAgregar.setText("Editar");
        btnAgregar.addActionListener(this::btnEditarActionPerformed);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEmpresa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        panelFechaHasta = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtPuesto = new javax.swing.JTextField();
        txtSalario = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        panelFechaDesde = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setClosable(true);
        setTitle("Agregar Experiencia");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(txtEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 460, -1));

        jLabel2.setText("Salario:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 75, -1, -1));

        jLabel3.setText("Descripcion del puesto:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));
        getContentPane().add(panelFechaHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, -1, -1));

        jLabel4.setText("Hasta:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, -1, -1));
        getContentPane().add(txtPuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 460, -1));
        getContentPane().add(txtSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 460, -1));

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        jScrollPane1.setViewportView(txtDesc);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 520, -1));

        jLabel5.setText("Empresa:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel6.setText("Puesto:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 45, -1, -1));
        getContentPane().add(panelFechaDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 100, -1, -1));

        jLabel7.setText("Desde:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        btnAgregar.setText("Agregar");
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, -1, -1));
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 290, 10, -1));

        pack();

        Properties p = new Properties();
        p.put("text.today", "Hoy");
        p.put("text.month", "Mes");
        p.put("text.year", "Año");

        UtilDateModel modelFechaDesde = new UtilDateModel();
        modelFechaDesde.setSelected(true); // o setDate(año, mes, día)

        JDatePanelImpl datePanelDesde = new JDatePanelImpl(modelFechaDesde, p);
        datePickerDesde = new JDatePickerImpl(datePanelDesde, new DateLabelFormatter());
        panelFechaDesde.setLayout(new java.awt.FlowLayout());
        panelFechaDesde.add(datePickerDesde);

        UtilDateModel modelFechaHasta = new UtilDateModel();
        modelFechaHasta.setSelected(true); // o setDate(año, mes, día)

        JDatePanelImpl datePanelHasta = new JDatePanelImpl(modelFechaHasta, p);
        datePickerHasta = new JDatePickerImpl(datePanelHasta, new DateLabelFormatter());
        panelFechaHasta.setLayout(new java.awt.FlowLayout());
        panelFechaHasta.add(datePickerHasta);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAgregarActionPerformed
        if (!camposSonValidos()) {
            return;
        }

        ExperienciaLaboral expLaboral = new ExperienciaLaboral();
        expLaboral.setEmpresa(txtEmpresa.getText().trim());
        expLaboral.setPuesto(txtPuesto.getText().trim());
        if (txtSalario.getValue() != null)
            expLaboral.setSalario(new BigDecimal(txtSalario.getValue().toString()));

        expLaboral.setDescripcion(txtDesc.getText());

        UtilDateModel fechaDesdeModel = (UtilDateModel) datePickerDesde.getModel();
        expLaboral.setFechaDesde(fechaDesdeModel.getValue().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        UtilDateModel fechaHastaModel = (UtilDateModel) datePickerHasta.getModel();
        expLaboral.setFechaHasta(fechaHastaModel.getValue().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());

        nuevoCandidatoForm.agregarExperienciaLaboral(expLaboral);
        this.dispose();
        SwingUtilities.invokeLater(() -> {
            getParent().revalidate();
            getParent().repaint();
        });
    }// GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAgregarActionPerformed'
        if (!camposSonValidos()) {
            return;
        }

        editingExp.setEmpresa(txtEmpresa.getText().trim());
        editingExp.setPuesto(txtPuesto.getText().trim());
        if (txtSalario.getValue() != null)
            editingExp.setSalario(new BigDecimal(txtSalario.getValue().toString()));

        editingExp.setDescripcion(txtDesc.getText());
        UtilDateModel fechaDesdeModel = (UtilDateModel) datePickerDesde.getModel();
        editingExp.setFechaDesde(fechaDesdeModel.getValue().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        UtilDateModel fechaHastaModel = (UtilDateModel) datePickerHasta.getModel();
        editingExp.setFechaHasta(fechaHastaModel.getValue().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());

        nuevoCandidatoForm.recargarExperiencias();
        this.dispose();
        SwingUtilities.invokeLater(() -> {
            getParent().revalidate();
            getParent().repaint();
        });
    }

    private boolean camposSonValidos() {
        if (txtEmpresa.getText() == null || txtEmpresa.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "El campo de Empresa es requerido", "Campo Vacio",
                    JOptionPane.WARNING_MESSAGE);
            return false;
        }

        if (txtPuesto.getText() == null || txtPuesto.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "El campo de Puesto es requerido", "Campo Vacio",
                    JOptionPane.WARNING_MESSAGE);
            return false;
        }

        UtilDateModel fechaDesdeModel = (UtilDateModel) datePickerDesde.getModel();
        LocalDate fechaDesde = fechaDesdeModel.getValue().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        UtilDateModel fechaHastaModel = (UtilDateModel) datePickerHasta.getModel();
        LocalDate fechaHasta = fechaHastaModel.getValue().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        if (fechaDesde.isAfter(LocalDate.now()) || fechaHasta.isAfter(LocalDate.now())) {
            JOptionPane.showMessageDialog(this, "Las fechas no pueden ser mas adelante que la fecha actual",
                    "Valores invalidos", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        if (fechaDesde.isEqual(fechaHasta) || fechaDesde.isAfter(fechaHasta)) {
            JOptionPane.showMessageDialog(this, "La fecha Desde no puede ser despues despues o igual a la fecha Hasta",
                    "Valores invalidos", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelFechaDesde;
    private javax.swing.JPanel panelFechaHasta;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtPuesto;
    private javax.swing.JSpinner txtSalario;
    // End of variables declaration//GEN-END:variables
}
