/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.empleadoForm;

import java.util.List;

import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import model.Departamento;
import model.Empleado;
import service.EmpleadoService;
import view.departamentoForm.EditarDepartamentoForm;

/**
 *
 * @author Joel Grullon
 */
public class EmpleadoForm extends javax.swing.JInternalFrame {

    private EmpleadoService empleadoService;
    private JDesktopPane mainDesktop;

    private List<Empleado> listaEmpleado;
    private DefaultTableModel tblEmpleadoModel;

    /**
     * Creates new form EmpleadoForm
     */
    public EmpleadoForm(JDesktopPane desktop) {
        mainDesktop=desktop;

        empleadoService=new EmpleadoService();

        initComponents();
        initTable();
        cargarEmpleados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleados = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setClosable(true);
        setTitle("Gestion de Empleados");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cedula", "Nombre", "Apellido", "Fecha Ingreso", "Puesto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEmpleados);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 860, 340));

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 360, -1, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 360, -1, -1));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, 10, -1));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 390, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initTable(){
        tblEmpleadoModel=new javax.swing.table.DefaultTableModel(
            new String [] {
                "Id", "Cedula", "Nombre", "Apellido", "Fecha Ingreso", "Puesto"
            },
            0
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        tblEmpleados.setModel(tblEmpleadoModel);

        // Configurar botones inicialmente invisibles
         btnEditar.setEnabled(false);
         btnEliminar.setEnabled(false);

        // Agregar listener una sola vez para activar botones al seleccionar fila
        tblEmpleados.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) { // Evitar múltiples eventos
                    boolean filaSeleccionada = tblEmpleados.getSelectedRow() != -1;
                    btnEditar.setEnabled(filaSeleccionada);
                    btnEliminar.setEnabled(filaSeleccionada);
                }
            }
        });
    }

    public void cargarEmpleados(){
        tblEmpleadoModel.setRowCount(0);

        listaEmpleado=empleadoService.getAllWithRelationships();

        for (Empleado e : listaEmpleado) {
            tblEmpleadoModel.addRow(new Object[] {
                e.getIdEmpleado(),
                e.getCedula(),
                e.getNombreEmpleado(),
                e.getApellidoEmpleado(),
                e.getFechaIngreso().toString(),
                e.getPuesto().getNombrePuesto(),
            });
        }
    }

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int filaSeleccionada = tblEmpleados.getSelectedRow();
        if (filaSeleccionada < 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un empleado para editar.");
            return;
        }

        Empleado empleadoSeleccionado = listaEmpleado.get(filaSeleccionada);
        EditarEmpleadoForm editarForm = new EditarEmpleadoForm(empleadoSeleccionado, this);
        mainDesktop.add(editarForm);
        editarForm.setVisible(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
            int fila = tblEmpleados.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.");
            return;
        }

        Empleado empleado = listaEmpleado.get(fila);

        int conf = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este empleado?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (conf != JOptionPane.YES_OPTION) {
            return;
        }

        if (!empleadoService.delete(empleado)) {
            JOptionPane.showMessageDialog(this, "Error al eliminar.");
        } 

        JOptionPane.showMessageDialog(this, "Empleado eliminado correctamente");
        cargarEmpleados();
        
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmpleados;
    // End of variables declaration//GEN-END:variables
}
